import capitalize from 'capitalize';
import TestPage from '../../pageObjects/testPage';
import { cookiesSetupAndAccessBodyPage } from '../textLocaleTests/base-test-helper';

function getAge(age) {
  if (age === 'all ages') return 'All Ages';
  if (age <= 30) return 'Young';
  if (age <= 60) return 'Middle Age';
  return 'Senior';
}

function testPageTestSteps(age, gender, test, user, locale) {
  const testPage = new TestPage();
  const localeStrDict = {
    [testPage.locale.en]: 'English', [testPage.locale.fr]: 'French',
  };
    // same approach used as in text locale text. Reuse the function
  cookiesSetupAndAccessBodyPage(testPage, gender, age, user, locale);
  cy.getTestId('test')
    .click();
  cy.intercept({
    url: 'https://www.google-analytics.com/**/collect?*',
    // All v:2 requests are ping type and generated by https://www.googletagmanager.com/gtag/js which our product does not actively use, ignored.
    // t:dc requests are not documented  in https://developers.google.com/analytics/devguides/collection/protocol/v1/devguide#commonhits, ignored.
    query: { v: '1', t: 'pageview' },
  })
    .as('ga-pageview');

  cy.intercept({
    url: 'https://www.google-analytics.com/**/collect?*',
    //  See above comment for query selection
    query: { v: '1', t: 'event' },
  })
    .as('ga-event');

  testPage.assertAndClickTest(test);
  testPage
    .assertPageViewGA('@ga-pageview', {
      dp: `tests/${test}`,
      uid: null,
    });

  testPage
  //  For whatever reason, ReactGA normalizes input to be title case
    .assertEventGA('@ga-event',
      `${capitalize(user)}-Tests-${capitalize.words(test)
        .replace('/', ' or ')
        .replace('Or', 'or')
        .replace('And', 'and')
        .replace('For', 'for')
        .replace('Aaa', 'AAA')
        .replace('L’AAA', 'l’AAA')
        .replace('To', 'to')
        .replace('tomodensitométrie', 'Tomodensitométrie')
        .replace('Sti', 'STI')
        .replace('Its', 'ITS')
        .replace('Tdm', 'TDM')
        .replace('Ct', 'CT')
        .replace('Of', 'of')}`,
      'Other-Chrome',
      `${capitalize(testPage.generateGenderCookies(gender).gender)}-${getAge(age)}-${localeStrDict[locale]}`);
}

export default testPageTestSteps;
